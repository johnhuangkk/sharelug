version: '2'
services:

  go:
    restart: always
    build:
      context: ../go
    container_name: ${COMPOSE_PROJECT_NAME}_go
    networks:
      ithelp_application:
        ipv4_address: 172.27.0.2
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - DEBUG=true
    ports:
      - ${GO_PORT}:8001
    volumes:
      - ${CODE_PATH}/:/go/src/sharelug
      - ${AWS_CONFIGURE}:/root/.aws
      - ${LOG_PATH}:/var/log/goapi
    tty: true
    depends_on:
      - nginx

  nginx:
    restart: always
    build:
      context: ../angularNginx
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    networks:
      ithelp_application:
        ipv4_address: 172.27.0.5
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/logs/nginx:/var/log/nginx
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      - ${DATA_PATH_HOST}/sharelug-universal/:/var/www/
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_ARCHIVE_PATH}:/etc/nginx/archive
      - ${NGINX_CONFIG}:/etc/nginx/nginx.conf
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    tty: true

  java:
    restart: always
    build:
      context: ../java
    container_name: ${COMPOSE_PROJECT_NAME}_java
    networks:
      ithelp_application:
        ipv4_address: 172.27.0.6
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    ports:
      - 8000:8000
    tty: true

networks:
  ithelp_application:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16
          gateway: 172.27.0.1



